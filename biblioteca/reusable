class Usuari(AbstractUser):
    centre = models.ForeignKey(Centre,on_delete=models.SET_NULL,null=True,blank=True)
    grup = models.ForeignKey(Grup,on_delete=models.SET_NULL,null=True,blank=True)
    telefon =  models.CharField(max_length=9,validators=[RegexValidator(regex=r'^\d+$', message="Només es permeten números.")],blank=True,null=True)

    imatge = models.ImageField(upload_to='usuaris/',null=True,blank=True)
    auth_token = models.CharField(max_length=32,blank=True,null=True)


class Cataleg(models.Model):
    titol = models.CharField(max_length=200)
    titol_original = models.CharField(max_length=200, blank=True, null=True)
    autor = models.CharField(max_length=200, blank=True, null=True)
    CDU = models.CharField(max_length=40, blank=True, null=True)
    signatura = models.CharField(max_length=40, blank=True, null=True)
    data_edicio = models.DateField(null=True,blank=True)
    resum = models.TextField(blank=True,null=True)
    anotacions = models.TextField(blank=True,null=True)
    mides = models.CharField(max_length=100,null=True,blank=True)
    tags = models.ManyToManyField(Categoria,blank=True)
    def __str__(self):
        return self.titol
    
class Exemplar(models.Model):
    cataleg = models.ForeignKey(Cataleg, on_delete=models.CASCADE)
    registre = models.CharField(max_length=100, null=True, blank=True)
    exclos_prestec = models.BooleanField(default=False) 
    baixa = models.BooleanField(default=False)
    centre = models.ForeignKey(Centre, on_delete=models.CASCADE)

    class Meta:
        constraints = [
            models.UniqueConstraint(fields=['cataleg', 'id'], name='unique_cataleg_exemplar')
        ]
    
    def __str__(self):
        return f"REG:{self.registre} - {self.cataleg.titol}"